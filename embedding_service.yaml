# The value of the - name parameter (container image or cloud builders) can be obtained from
# https://cloud.google.com/build/docs/cloud-builders
steps:
  
  - id: 'tf plan'
    name: 'hashicorp/terraform'
    entrypoint: 'sh'
    args: 
     - '-c'
     - | 
      cd terraform
      terraform init && terraform plan --var-file='dev/dev.tfvars' \
      -target=google_artifact_registry_repository.rag_llm_artifact_registry

  - id: 'tf apply'
    name: 'hashicorp/terraform'
    entrypoint: 'sh'
    args:
      - '-c'
      - |
        cd terraform
        terraform apply -var-file='dev/dev.tfvars' \
        -target=google_artifact_registry_repository.rag_llm_artifact_registry \
        -auto-approve

  - id: 'copy uv files'
    name: 'ubuntu'
    entrypoint: 'sh'
    args:
      - '-c' # Execute the following commands in a sequential manner
      - | # Allow to write commands in more than 1 row
        cp pyproject.toml uv.lock rag_llm_energy_expert/services/embeddings/.

  - id: 'build embedding service image'
    name: 'gcr.io/cloud-builders/docker'
    args:
      - build 
      - '-t'
      - 'northamerica-south1-docker.pkg.dev/$PROJECT_ID/dev-rag-llm-artifact/embedding_service:$SHORT_SHA'
      - '-f' 
      - './rag_llm_energy_expert/services/embeddings/embeddings_service.dockerfile'
      - './rag_llm_energy_expert/services/embeddings'
    
  - id: 'push embedding service image'
    name: 'gcr.io/cloud-builders/docker'
    args:
      - push 
      - 'northamerica-south1-docker.pkg.dev/$PROJECT_ID/dev-rag-llm-artifact/embedding_service:$SHORT_SHA'
  
  - id: 'deploy embedding service'
    name: 'hashicorp/terraform'
    entrypoint: 'sh'
    args:
      - '-c'
      - |
        cd terraform
        terraform apply -var-file='dev/dev.tfvars' -var="embedding_service_image_name=$SHORT_SHA"\
        -target=google_cloud_run_v2_service.cloudrun_embeddings_instance \
        -target=google_cloud_run_v2_service_iam_member.noauth \
        -auto-approve -target=google_cloud_run_v2_service.cloudrun_embeddings_instance

logsBucket: 'gs://rag_llm_energy_expert/build_logs'
options:
  logging: GCS_ONLY